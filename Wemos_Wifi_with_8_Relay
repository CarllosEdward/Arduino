/*------------------------------------------------------------------------------------------------*/
/*-----------------------------------< IoT Wemos R1 D1 >------------------------------------------*/
/*----------------------------< Relé Intelligente de 8 Canais >-----------------------------------*/
/*------------------------------------< Versão 1.0.0 >--------------------------------------------*/
/*----------------------------< Criado por Carlos Cordeiro >--------------------------------------*/
/*------------------------------------< 07/11/2021 >----------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------------------------- 

Caro desenvolvedor,

Quando fiz esse código, muita coisa deu errda e,e ntre vários debugs, graças a Deus ele deu certo

Sendo assim, só eu e Ele sabemos como foi complicado fazer ele funcionar e certamente deve ter
muita coisa ser feita nele então, como forma de contribuir com o código, por favor mantenha a 
corrente e atualiez o número de horas

Horas_no_codigo =  10

---------------------------------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------------------------------*/
/*            Transformando a nomenclatura das portas da placa para o padrão do Arduino            */
/*-------------------------------------------------------------------------------------------------*/

#define D0 16
#define D1 5
#define D2 4
#define D3 0
#define D4 2
#define D5 14
#define D6 12
#define D7 13
#define D8 15

/*-------------------------------------------------------------------------------------------------*/
/*                        Definindo nomenclatura dos pinos físicos (opcional)                      */
/*-------------------------------------------------------------------------------------------------*/

#define RELAY_PIN_1      D1
#define RELAY_PIN_2      D2
#define RELAY_PIN_3      D3
#define RELAY_PIN_4      D4
#define RELAY_PIN_5      D5
#define RELAY_PIN_6      D6
#define RELAY_PIN_7      D7
#define RELAY_PIN_8      D8

/*-------------------------------------------------------------------------------------------------*/
/*                       Definindo nomenclatura dos pinos Virtuais do Blynk                        */
/*-------------------------------------------------------------------------------------------------*/

#define VPIN_BUTTON_1    V1
#define VPIN_BUTTON_2    V2
#define VPIN_BUTTON_3    V3
#define VPIN_BUTTON_4    V4  
#define VPIN_BUTTON_5    V5
#define VPIN_BUTTON_6    V6
#define VPIN_BUTTON_7    V7
#define VPIN_BUTTON_8    V8


/*-------------------------------------------------------------------------------------------------*/
/*                        Carregando as bibliotecas do Blynk e ESP8266                             */
/*-------------------------------------------------------------------------------------------------*/

#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

/*-------------------------------------------------------------------------------------------------*/
/*                      Configurando Token do Blynk e dados da Rede WiFi                           */
/*-------------------------------------------------------------------------------------------------*/

char auth[] = "Seu_Token_na_Blynk";
char ssid[] = "Sua_Rede_WiFi";
char pass[] = "Sua_Senha_do_Wifi";

BlynkTimer timer;

void checkPhysicalButton();

/*-------------------------------------------------------------------------------------------------*/
/*               Definindo estado inicial dos Relés para nivel baixo Desligados)                   */
/*-------------------------------------------------------------------------------------------------*/

int relay1State = LOW;
//int pushButton1State = HIGH; //botão externo opcional

int relay2State = LOW;
//int pushButton2State = HIGH; //botão externo opcional

int relay3State = LOW;
//int pushButton3State = HIGH; //botão externo opcional

int relay4State = LOW;
//int pushButton4State = HIGH; //botão externo opcional

int relay5State = LOW;
//int pushButton5State = HIGH; //botão externo opcional

int relay6State = LOW;
//int pushButton6State = HIGH; //botão externo opcional

int relay7State = LOW;
//int pushButton7State = HIGH; //botão externo opcional

int relay8State = LOW;
//int pushButton8State = HIGH; //botão externo opcional

/*-------------------------------------------------------------------------------------------------*/
/*                                       Conectando à Blynk                                        */
/*-------------------------------------------------------------------------------------------------*/

BLYNK_CONNECTED() 

{

/*-------------------------------------------------------------------------------------------------*/
/*                    Verificando o último estado dos pínos virtuais                               */
/*-------------------------------------------------------------------------------------------------*/
  
  Blynk.syncVirtual(VPIN_BUTTON_1);
  Blynk.syncVirtual(VPIN_BUTTON_2);
  Blynk.syncVirtual(VPIN_BUTTON_3);
  Blynk.syncVirtual(VPIN_BUTTON_4);
  Blynk.syncVirtual(VPIN_BUTTON_5);
  Blynk.syncVirtual(VPIN_BUTTON_6);
  Blynk.syncVirtual(VPIN_BUTTON_7);
  Blynk.syncVirtual(VPIN_BUTTON_8);
  
}

BLYNK_WRITE(VPIN_BUTTON_1) {
  relay1State = param.asInt();
  digitalWrite(RELAY_PIN_1, relay1State);
}

BLYNK_WRITE(VPIN_BUTTON_2) {
  relay2State = param.asInt();
  digitalWrite(RELAY_PIN_2, relay2State);
}
BLYNK_WRITE(VPIN_BUTTON_3) {
  relay3State = param.asInt();
  digitalWrite(RELAY_PIN_3, relay3State);
}
BLYNK_WRITE(VPIN_BUTTON_4) {
  relay4State = param.asInt();
  digitalWrite(RELAY_PIN_4, relay4State);
}

BLYNK_WRITE(VPIN_BUTTON_5) {
  relay5State = param.asInt();
  digitalWrite(RELAY_PIN_5, relay5State);
}

BLYNK_WRITE(VPIN_BUTTON_6) {
  relay6State = param.asInt();
  digitalWrite(RELAY_PIN_6, relay6State);
}

BLYNK_WRITE(VPIN_BUTTON_7) {
  relay7State = param.asInt();
  digitalWrite(RELAY_PIN_7, relay7State);
}

BLYNK_WRITE(VPIN_BUTTON_8) {
  relay8State = param.asInt();
  digitalWrite(RELAY_PIN_8, relay8State);
}

void checkPhysicalButton()
{
  
      digitalWrite(RELAY_PIN_1, relay1State);
      //Blynk.virtualWrite(VPIN_BUTTON_1, relay1State);
      
      digitalWrite(RELAY_PIN_2, relay2State);
      //Blynk.virtualWrite(VPIN_BUTTON_2, relay2State);
            
      digitalWrite(RELAY_PIN_3, relay3State);
      //Blynk.virtualWrite(VPIN_BUTTON_3, relay3State);

      digitalWrite(RELAY_PIN_4, relay4State);
      //Blynk.virtualWrite(VPIN_BUTTON_4, relay4State);

      digitalWrite(RELAY_PIN_5, relay5State);
      //Blynk.virtualWrite(VPIN_BUTTON_5, relay5State);

      digitalWrite(RELAY_PIN_6, relay6State);
      //Blynk.virtualWrite(VPIN_BUTTON_6, relay6State);

      digitalWrite(RELAY_PIN_7, relay7State);
      //Blynk.virtualWrite(VPIN_BUTTON_7, relay7State);

      digitalWrite(RELAY_PIN_8, relay8State);
      //Blynk.virtualWrite(VPIN_BUTTON_8, relay8State);
}  

void setup()
{

  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);

  pinMode(RELAY_PIN_1, OUTPUT);
  digitalWrite(RELAY_PIN_1, relay1State);

  pinMode(RELAY_PIN_2, OUTPUT);
  digitalWrite(RELAY_PIN_2, relay2State);

  pinMode(RELAY_PIN_3, OUTPUT);
  digitalWrite(RELAY_PIN_3, relay3State);

  pinMode(RELAY_PIN_4, OUTPUT);
  digitalWrite(RELAY_PIN_4, relay4State);

    pinMode(RELAY_PIN_5, OUTPUT);
  digitalWrite(RELAY_PIN_5, relay5State);

    pinMode(RELAY_PIN_6, OUTPUT);
  digitalWrite(RELAY_PIN_6, relay6State);

    pinMode(RELAY_PIN_7, OUTPUT);
  digitalWrite(RELAY_PIN_7, relay7State);

    pinMode(RELAY_PIN_8, OUTPUT);
  digitalWrite(RELAY_PIN_8, relay8State);

  // Setup a function to be called every 100 ms
  timer.setInterval(500L, checkPhysicalButton);
}

void loop()
{
  Blynk.run();
  timer.run();
}
